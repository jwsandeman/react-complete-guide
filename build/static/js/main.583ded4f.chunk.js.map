{"version":3,"sources":["Components/Expenses/ExpenseDate.js","Components/UI/Card.js","Components/Expenses/ExpenseItem.js","Components/Expenses/ExpenseFilter.js","Components/Expenses/ExpensesList.js","Components/Chart/ChartBar.js","Components/Chart/Chart.js","Components/Expenses/ExpensesChart.js","Components/Expenses/Expenses.js","Components/NewExpense/ExpenseForm.js","Components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","useState","title","setTitle","amount","onClick","console","log","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpensesList","list","length","map","expense","id","ChartBar","barfillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","items","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.583ded4f.chunk.js","sourcesContent":["import \"./ExpenseDate.css\";\n\nfunction ExpenseDate(props) {\n  const month = props.date.toLocaleString(\"en-us\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-us\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate;\n","import \"./Card.css\";\n\nfunction Card(props) {\n  const classes = \"card \" + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n}\n\nexport default Card;\n","import React, { useState } from \"react\";\n\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nimport \"./ExpenseItem.css\";\n\nfunction ExpenseItem(props) {\n  const [title, setTitle] = useState(props.title);\n\n  const clickHandler = () => {\n    setTitle(\"Updated\");\n    console.log(title);\n  };\n\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__descritpion\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n        <button onClick={clickHandler}>Change Title</button>\n      </Card>\n    </li>\n  );\n}\n\nexport default ExpenseItem;\n","import React, { useState } from \"react\";\n\nimport \"./ExpenseFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const dropDownChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by Tag</label>\n        <select value={props.selected} onChange={dropDownChangeHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\n\nimport \"./ExpensesList.css\";\n\nconst ExpensesList = (props) => {\n  if (props.list.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found No Expenses</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.list.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from \"react\";\n\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barfillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barfillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barfillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\nimport ChartBar from \"./ChartBar\";\n\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => Jan = 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import { React, useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport ExpensesList from \"./ExpensesList\";\n\nimport \"./Expenses.css\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <Card className=\"expenses\">\n      <ExpenseFilter\n        selected={filteredYear}\n        onChangeFilter={filterChangeHandler}\n      />\n      <ExpensesChart expenses={filteredExpenses} />\n      <ExpensesList list={filteredExpenses} />\n    </Card>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\n\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  //or you can do it as 1 individual state with key value pairs like this\n  // const [userInput, SetUserInput] = useState({\n  //   enteredTitle: \"\",\n  //   enteredAmount: \"\",\n  //   enteredDate: \"\",\n  // });\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n    // //setUserInput({\n    //   ...userInput,\n    //   enteredTitle: event.target.value,\n    // });\n    //or like this which is considered better practice as it gives you the latest state snapshot\n    // //setUserInput((prevState) => {\n    //   return { ...prevState, enteredTitle: event.target.value };\n    // });\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n    // //setUserInput({\n    //   ...userInput,\n    //   enteredAmount: event.target.value,\n    // });\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n    // //setUserInput({\n    //   ...userInput,\n    //   enteredDate: event.target.value,\n    // });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    props.onSaveExpenseData(expenseData);\n\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            value={enteredAmount}\n            min=\"0.01\"\n            step=\"0.01\"\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            value={enteredDate}\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\n\nimport \"./NewExpense.css\";\n\nconst NewExpense = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n  // can be conditionaly rendered like this or as below\n  // if (isEditing === false) {\n  //   return (\n  //     <div className=\"new-expense\">\n  //       <button onClick={startEditingHandler}>Add New Expense</button>\n  //     </div>\n  //   );\n  // }\n\n  // if (isEditing === true) {\n  //   return (\n  //     <div className=\"new-expense\">\n  //       <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\n  //     </div>\n  //   );\n  // }\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && (\n        <button onClick={startEditingHandler}>Add New Expense</button>\n      )}\n      {isEditing && (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onCancel={stopEditingHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React, { useState } from \"react\";\n\nimport Expenses from \"./Components/Expenses/Expenses\";\nimport NewExpense from \"./Components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Car Insurance\",\n    amount: 29.57,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e2\",\n    title: \"Books\",\n    amount: 24.87,\n    date: new Date(2021, 4, 18),\n  },\n  {\n    id: \"e3\",\n    title: \"Pet Food\",\n    amount: 35.6,\n    date: new Date(2021, 1, 5),\n  },\n  {\n    id: \"e4\",\n    title: \"Maccas\",\n    amount: 72.57,\n    date: new Date(2021, 7, 30),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}